<?php

namespace {{ namespace }};

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Server\MiddlewareInterface;
use Psr\Http\Server\RequestHandlerInterface;

/**
 *@see https://www.php-fig.org/psr/psr-15/
 */
final class {{ class }} implements MiddlewareInterface
{
    /**
     * @param  ServerRequestInterface  $request PSR-7 request
     * @param  RequestHandlerInterface $handler PSR-15 request handler
     *
     * @return ResponseInterface
     */
    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface
    {
        $response = $handler->handle($request);

        // You can build a new response /BEFORE way/
        // $existingContent = (string) $response->getBody();
        // $response = new Response();
        // $response->getBody()->write('BEFORE' . $existingContent);

        // Or decorate the original one /AFTER way/
        // $response->getBody()->write('AFTER');

        // you must always return $response
        return $response;
    }
}
