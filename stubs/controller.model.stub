<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Controller;
use Nyholm\Psr7\Response;
use Nyholm\Psr7\ServerRequest;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @param  ResponseInterface        $response
     * @param  ServerRequestInterface   $response
     *
     * @return Response
     */
    public function index(ResponseInterface $response, ServerRequestInterface $request) :Response
    {
        $m = new {{ model }}();
        //
        return $response;
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  ResponseInterface        $response
     * @param  ServerRequestInterface   $response
     *
     * @return Response
     */
    public function store(ResponseInterface $response, ServerRequestInterface $request) :Response
    {
        $m = new {{ model }}();
        //
        return $response;
    }

    /**
     * Display the specified resource.
     *
     * @param  string                   ${{ modelVariable }}
     * @param  ResponseInterface        $response
     * @param  ServerRequestInterface   $response
     *
     * @return Response
     */
    public function show(ResponseInterface $response, ServerRequestInterface $request, string ${{ modelVariable }}) :Response
    {
        $m = new {{ model }}();
        $m->where( '{{modelVariable}}', '=', ${{modelVariable}} );
        $resource = $m->get()->first();
        //
        return $response;
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  string                   ${{ modelVariable }}
     * @param  ResponseInterface        $response
     * @param  ServerRequestInterface   $response
     *
     * @return Response
     */
    public function update(ResponseInterface $response, ServerRequestInterface $request, string ${{ modelVariable }}) :Response
    {
        $m = new {{ model }}();
        $m->where( '{{modelVariable}}', '=', ${{modelVariable}} );
        $resource = $m->get()->first();
        //
        return $response;
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  string                   ${{ modelVariable }}
     * @param  ResponseInterface        $response
     * @param  ServerRequestInterface   $response
     *
     * @return Response
     */
    public function destroy(ResponseInterface $response, ServerRequestInterface $request, string ${{ modelVariable }}) :Response
    {
        $m = new {{ model }}();
        $m->where( '{{modelVariable}}', '=', ${{modelVariable}} );
        $resource = $m->get()->first();
        //
        return $response;
    }
}
